version: "3.9"  # optional since v1.27.0
services:
  auth:
    image: auth:latest
    build: ./auth
    restart: unless-stopped
    ports:
      - 8001:80
    volumes:
      - "./auth/src:/src"
    labels:
      - autoheal=true
    depends_on:
      - db
    networks:
      - db

  prop:
    image: prop:latest
    build: ./property
    restart: unless-stopped
    ports:
      - 8000:80
    volumes: 
      - "./property/src:/src"
    labels:
      - autoheal=true
    depends_on:
      - db
      - queue
    networks:
      - db
      - queue
  
  tax:
    image: tax:latest
    build: ./tax
    restart: unless-stopped
    ports:
      - 8004:80
    volumes: 
      - "./tax/src:/src"
    labels:
      - autoheal=true
    depends_on:
      - db
      - queue
    networks:
      - db
      - queue

  redis:
    image: redis:5
    networks:
      - redis
  
  worker:
    build: ./offer
    command: celery -A worker.celery worker --loglevel=info
    volumes:
      - ./offer/src:/src
    labels:
      - autoheal=false
    healthcheck:
      disable: true
    environment:
      - WORKER_THREADS=2
      - SECRET_KEY=SECRET_KEY
      - DB_USER=user
      - DB_PASSWORD=pass
      - DB_SERVER=db
      - DB_PORT=5432
      - DATABASE=offer
      - BROKER_HOST=queue
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - OFFER_ACCEPT_DELAY=1
      - OFFER_TRANSFER_DELAY=1
      - OFFER_PRICE_ACCEPT_TRESHOLD=100
    depends_on:
      - redis
      - db
      - queue
    networks:
      - db
      - queue
      - redis


  offer:
    image: offer:latest
    build: ./offer
    restart: unless-stopped
    environment:
      - WORKER_THREADS=2
      - SECRET_KEY=SECRET_KEY
      - DB_USER=user
      - DB_PASSWORD=pass
      - DB_SERVER=db
      - DB_PORT=5432
      - DATABASE=offer
      - BROKER_HOST=queue
      - CELERY_BROKER_URL=redis://redis:6379
      - CELERY_RESULT_BACKEND=redis://redis:6379
      - OFFER_ACCEPT_DELAY=1
      - OFFER_TRANSFER_DELAY=1
      - OFFER_PRICE_ACCEPT_TRESHOLD=100
    labels:
      - autoheal=true
    ports:
      - 8005:80
    volumes: 
      - "./offer/src:/src"
    depends_on:
      - redis
      - db
      - queue
    networks:
      - db
      - queue
      - redis

  db:
    image: postgres:13.3
    environment:
        - POSTGRES_PASSWORD=pass
        - POSTGRES_USER=user
    volumes:
        - db-data:/var/lib/postgresql/data
    networks:
      - db

  queue:
    image: queue:latest
    build: ./event_queue
    ports:
      - "15671:15671"
      - "15672:15672"
    volumes:
      - rabbit-data:/data
    networks:
      - queue

  pgadmin:
    image: dpage/pgadmin4:latest
    ports:
      - 5452:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@domain.com
      - PGADMIN_DEFAULT_PASSWORD=pass
    volumes:
      - pgadmin-servers:/pgadmin4/servers.json
    logging:
      driver: none
    depends_on:
      - db
    networks:
      - db

  autoheal:
    restart: unless-stopped
    image: willfarrell/autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=autoheal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  db-data:
  rabbit-data:
  pgadmin-servers:

networks:
  queue:
  db:
  redis:
